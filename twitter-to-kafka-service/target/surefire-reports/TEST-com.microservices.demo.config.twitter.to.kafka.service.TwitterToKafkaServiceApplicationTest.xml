<?xml version="1.0" encoding="UTF-8"?>
<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report.xsd" name="com.microservices.demo.config.twitter.to.kafka.service.TwitterToKafkaServiceApplicationTest" time="1.916" tests="1" errors="1" skipped="0" failures="0">
  <properties>
    <property name="java.specification.version" value="19"/>
    <property name="sun.cpu.isalist" value="amd64"/>
    <property name="sun.jnu.encoding" value="Cp1252"/>
    <property name="java.class.path" value="D:\Workspaces\SpringToolsSuite\udemy\microservices-demo\microservices-demo\twitter-to-kafka-service\target\test-classes;D:\Workspaces\SpringToolsSuite\udemy\microservices-demo\microservices-demo\twitter-to-kafka-service\target\classes;D:\Workspaces\SpringToolsSuite\udemy\microservices-demo\microservices-demo\app-config-data\target\app-config-data-0.0.1-SNAPSHOT.jar;C:\Users\shant\.m2\repository\org\springframework\boot\spring-boot\3.0.5\spring-boot-3.0.5.jar;C:\Users\shant\.m2\repository\org\springframework\spring-context\6.0.7\spring-context-6.0.7.jar;C:\Users\shant\.m2\repository\org\springframework\spring-aop\6.0.7\spring-aop-6.0.7.jar;C:\Users\shant\.m2\repository\org\springframework\spring-beans\6.0.7\spring-beans-6.0.7.jar;C:\Users\shant\.m2\repository\org\springframework\spring-expression\6.0.7\spring-expression-6.0.7.jar;D:\Workspaces\SpringToolsSuite\udemy\microservices-demo\microservices-demo\kafka\kafka-admin\target\kafka-admin-0.0.1-SNAPSHOT.jar;D:\Workspaces\SpringToolsSuite\udemy\microservices-demo\microservices-demo\common-config\target\common-config-0.0.1-SNAPSHOT.jar;C:\Users\shant\.m2\repository\org\springframework\retry\spring-retry\2.0.1\spring-retry-2.0.1.jar;C:\Users\shant\.m2\repository\org\springframework\boot\spring-boot-starter-aop\3.0.5\spring-boot-starter-aop-3.0.5.jar;C:\Users\shant\.m2\repository\org\aspectj\aspectjweaver\1.9.19\aspectjweaver-1.9.19.jar;C:\Users\shant\.m2\repository\org\springframework\kafka\spring-kafka\3.0.5\spring-kafka-3.0.5.jar;C:\Users\shant\.m2\repository\org\springframework\spring-messaging\6.0.7\spring-messaging-6.0.7.jar;C:\Users\shant\.m2\repository\org\springframework\spring-tx\6.0.7\spring-tx-6.0.7.jar;C:\Users\shant\.m2\repository\org\apache\kafka\kafka-clients\3.3.2\kafka-clients-3.3.2.jar;C:\Users\shant\.m2\repository\com\github\luben\zstd-jni\1.5.2-1\zstd-jni-1.5.2-1.jar;C:\Users\shant\.m2\repository\org\lz4\lz4-java\1.8.0\lz4-java-1.8.0.jar;C:\Users\shant\.m2\repository\org\xerial\snappy\snappy-java\1.1.8.4\snappy-java-1.1.8.4.jar;C:\Users\shant\.m2\repository\io\micrometer\micrometer-observation\1.10.5\micrometer-observation-1.10.5.jar;C:\Users\shant\.m2\repository\io\micrometer\micrometer-commons\1.10.5\micrometer-commons-1.10.5.jar;C:\Users\shant\.m2\repository\com\google\code\findbugs\jsr305\3.0.2\jsr305-3.0.2.jar;C:\Users\shant\.m2\repository\org\springframework\boot\spring-boot-starter-webflux\3.0.5\spring-boot-starter-webflux-3.0.5.jar;C:\Users\shant\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.0.5\spring-boot-starter-json-3.0.5.jar;C:\Users\shant\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.14.2\jackson-databind-2.14.2.jar;C:\Users\shant\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.14.2\jackson-annotations-2.14.2.jar;C:\Users\shant\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.14.2\jackson-datatype-jdk8-2.14.2.jar;C:\Users\shant\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.14.2\jackson-datatype-jsr310-2.14.2.jar;C:\Users\shant\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.14.2\jackson-module-parameter-names-2.14.2.jar;C:\Users\shant\.m2\repository\org\springframework\boot\spring-boot-starter-reactor-netty\3.0.5\spring-boot-starter-reactor-netty-3.0.5.jar;C:\Users\shant\.m2\repository\io\projectreactor\netty\reactor-netty-http\1.1.5\reactor-netty-http-1.1.5.jar;C:\Users\shant\.m2\repository\io\netty\netty-codec-http\4.1.90.Final\netty-codec-http-4.1.90.Final.jar;C:\Users\shant\.m2\repository\io\netty\netty-common\4.1.90.Final\netty-common-4.1.90.Final.jar;C:\Users\shant\.m2\repository\io\netty\netty-buffer\4.1.90.Final\netty-buffer-4.1.90.Final.jar;C:\Users\shant\.m2\repository\io\netty\netty-transport\4.1.90.Final\netty-transport-4.1.90.Final.jar;C:\Users\shant\.m2\repository\io\netty\netty-codec\4.1.90.Final\netty-codec-4.1.90.Final.jar;C:\Users\shant\.m2\repository\io\netty\netty-handler\4.1.90.Final\netty-handler-4.1.90.Final.jar;C:\Users\shant\.m2\repository\io\netty\netty-codec-http2\4.1.90.Final\netty-codec-http2-4.1.90.Final.jar;C:\Users\shant\.m2\repository\io\netty\netty-resolver-dns\4.1.90.Final\netty-resolver-dns-4.1.90.Final.jar;C:\Users\shant\.m2\repository\io\netty\netty-resolver\4.1.90.Final\netty-resolver-4.1.90.Final.jar;C:\Users\shant\.m2\repository\io\netty\netty-codec-dns\4.1.90.Final\netty-codec-dns-4.1.90.Final.jar;C:\Users\shant\.m2\repository\io\netty\netty-resolver-dns-native-macos\4.1.90.Final\netty-resolver-dns-native-macos-4.1.90.Final-osx-x86_64.jar;C:\Users\shant\.m2\repository\io\netty\netty-resolver-dns-classes-macos\4.1.90.Final\netty-resolver-dns-classes-macos-4.1.90.Final.jar;C:\Users\shant\.m2\repository\io\netty\netty-transport-native-epoll\4.1.90.Final\netty-transport-native-epoll-4.1.90.Final-linux-x86_64.jar;C:\Users\shant\.m2\repository\io\netty\netty-transport-native-unix-common\4.1.90.Final\netty-transport-native-unix-common-4.1.90.Final.jar;C:\Users\shant\.m2\repository\io\netty\netty-transport-classes-epoll\4.1.90.Final\netty-transport-classes-epoll-4.1.90.Final.jar;C:\Users\shant\.m2\repository\io\projectreactor\netty\reactor-netty-core\1.1.5\reactor-netty-core-1.1.5.jar;C:\Users\shant\.m2\repository\io\netty\netty-handler-proxy\4.1.90.Final\netty-handler-proxy-4.1.90.Final.jar;C:\Users\shant\.m2\repository\io\netty\netty-codec-socks\4.1.90.Final\netty-codec-socks-4.1.90.Final.jar;C:\Users\shant\.m2\repository\org\springframework\spring-web\6.0.7\spring-web-6.0.7.jar;C:\Users\shant\.m2\repository\org\springframework\spring-webflux\6.0.7\spring-webflux-6.0.7.jar;C:\Users\shant\.m2\repository\io\projectreactor\reactor-core\3.5.4\reactor-core-3.5.4.jar;C:\Users\shant\.m2\repository\org\reactivestreams\reactive-streams\1.0.4\reactive-streams-1.0.4.jar;D:\Workspaces\SpringToolsSuite\udemy\microservices-demo\microservices-demo\kafka\kafka-producer\target\kafka-producer-0.0.1-SNAPSHOT.jar;D:\Workspaces\SpringToolsSuite\udemy\microservices-demo\microservices-demo\kafka\kafka-model\target\kafka-model-0.0.1-SNAPSHOT.jar;C:\Users\shant\.m2\repository\org\apache\avro\avro\1.11.0\avro-1.11.0.jar;C:\Users\shant\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.14.2\jackson-core-2.14.2.jar;C:\Users\shant\.m2\repository\io\confluent\kafka-avro-serializer\7.3.3\kafka-avro-serializer-7.3.3.jar;C:\Users\shant\.m2\repository\org\apache\commons\commons-compress\1.21\commons-compress-1.21.jar;C:\Users\shant\.m2\repository\io\confluent\kafka-schema-serializer\7.3.3\kafka-schema-serializer-7.3.3.jar;C:\Users\shant\.m2\repository\io\confluent\kafka-schema-registry-client\7.3.3\kafka-schema-registry-client-7.3.3.jar;C:\Users\shant\.m2\repository\io\swagger\core\v3\swagger-annotations\2.1.10\swagger-annotations-2.1.10.jar;C:\Users\shant\.m2\repository\com\google\guava\guava\30.1.1-jre\guava-30.1.1-jre.jar;C:\Users\shant\.m2\repository\com\google\guava\failureaccess\1.0.1\failureaccess-1.0.1.jar;C:\Users\shant\.m2\repository\com\google\guava\listenablefuture\9999.0-empty-to-avoid-conflict-with-guava\listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar;C:\Users\shant\.m2\repository\org\checkerframework\checker-qual\3.8.0\checker-qual-3.8.0.jar;C:\Users\shant\.m2\repository\com\google\errorprone\error_prone_annotations\2.5.1\error_prone_annotations-2.5.1.jar;C:\Users\shant\.m2\repository\com\google\j2objc\j2objc-annotations\1.3\j2objc-annotations-1.3.jar;C:\Users\shant\.m2\repository\io\confluent\logredactor\1.0.11\logredactor-1.0.11.jar;C:\Users\shant\.m2\repository\com\google\re2j\re2j\1.6\re2j-1.6.jar;C:\Users\shant\.m2\repository\io\confluent\logredactor-metrics\1.0.11\logredactor-metrics-1.0.11.jar;C:\Users\shant\.m2\repository\com\eclipsesource\minimal-json\minimal-json\0.9.5\minimal-json-0.9.5.jar;C:\Users\shant\.m2\repository\io\confluent\common-utils\7.3.3\common-utils-7.3.3.jar;C:\Users\shant\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\shant\.m2\repository\org\springframework\boot\spring-boot-starter\3.0.5\spring-boot-starter-3.0.5.jar;C:\Users\shant\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.0.5\spring-boot-autoconfigure-3.0.5.jar;C:\Users\shant\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.0.5\spring-boot-starter-logging-3.0.5.jar;C:\Users\shant\.m2\repository\ch\qos\logback\logback-classic\1.4.6\logback-classic-1.4.6.jar;C:\Users\shant\.m2\repository\ch\qos\logback\logback-core\1.4.6\logback-core-1.4.6.jar;C:\Users\shant\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.19.0\log4j-to-slf4j-2.19.0.jar;C:\Users\shant\.m2\repository\org\apache\logging\log4j\log4j-api\2.19.0\log4j-api-2.19.0.jar;C:\Users\shant\.m2\repository\org\slf4j\jul-to-slf4j\2.0.7\jul-to-slf4j-2.0.7.jar;C:\Users\shant\.m2\repository\org\springframework\spring-core\6.0.7\spring-core-6.0.7.jar;C:\Users\shant\.m2\repository\org\springframework\spring-jcl\6.0.7\spring-jcl-6.0.7.jar;C:\Users\shant\.m2\repository\org\yaml\snakeyaml\1.33\snakeyaml-1.33.jar;C:\Users\shant\.m2\repository\org\springframework\boot\spring-boot-starter-test\3.0.5\spring-boot-starter-test-3.0.5.jar;C:\Users\shant\.m2\repository\org\springframework\boot\spring-boot-test\3.0.5\spring-boot-test-3.0.5.jar;C:\Users\shant\.m2\repository\org\springframework\boot\spring-boot-test-autoconfigure\3.0.5\spring-boot-test-autoconfigure-3.0.5.jar;C:\Users\shant\.m2\repository\com\jayway\jsonpath\json-path\2.7.0\json-path-2.7.0.jar;C:\Users\shant\.m2\repository\net\minidev\json-smart\2.4.10\json-smart-2.4.10.jar;C:\Users\shant\.m2\repository\net\minidev\accessors-smart\2.4.9\accessors-smart-2.4.9.jar;C:\Users\shant\.m2\repository\org\ow2\asm\asm\9.3\asm-9.3.jar;C:\Users\shant\.m2\repository\org\slf4j\slf4j-api\2.0.7\slf4j-api-2.0.7.jar;C:\Users\shant\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.0\jakarta.xml.bind-api-4.0.0.jar;C:\Users\shant\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.1\jakarta.activation-api-2.1.1.jar;C:\Users\shant\.m2\repository\org\assertj\assertj-core\3.23.1\assertj-core-3.23.1.jar;C:\Users\shant\.m2\repository\net\bytebuddy\byte-buddy\1.12.23\byte-buddy-1.12.23.jar;C:\Users\shant\.m2\repository\org\hamcrest\hamcrest\2.2\hamcrest-2.2.jar;C:\Users\shant\.m2\repository\org\junit\jupiter\junit-jupiter\5.9.2\junit-jupiter-5.9.2.jar;C:\Users\shant\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.9.2\junit-jupiter-api-5.9.2.jar;C:\Users\shant\.m2\repository\org\opentest4j\opentest4j\1.2.0\opentest4j-1.2.0.jar;C:\Users\shant\.m2\repository\org\junit\platform\junit-platform-commons\1.9.2\junit-platform-commons-1.9.2.jar;C:\Users\shant\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;C:\Users\shant\.m2\repository\org\junit\jupiter\junit-jupiter-params\5.9.2\junit-jupiter-params-5.9.2.jar;C:\Users\shant\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.9.2\junit-jupiter-engine-5.9.2.jar;C:\Users\shant\.m2\repository\org\junit\platform\junit-platform-engine\1.9.2\junit-platform-engine-1.9.2.jar;C:\Users\shant\.m2\repository\org\mockito\mockito-core\4.8.1\mockito-core-4.8.1.jar;C:\Users\shant\.m2\repository\net\bytebuddy\byte-buddy-agent\1.12.23\byte-buddy-agent-1.12.23.jar;C:\Users\shant\.m2\repository\org\objenesis\objenesis\3.2\objenesis-3.2.jar;C:\Users\shant\.m2\repository\org\mockito\mockito-junit-jupiter\4.8.1\mockito-junit-jupiter-4.8.1.jar;C:\Users\shant\.m2\repository\org\skyscreamer\jsonassert\1.5.1\jsonassert-1.5.1.jar;C:\Users\shant\.m2\repository\com\vaadin\external\google\android-json\0.0.20131108.vaadin1\android-json-0.0.20131108.vaadin1.jar;C:\Users\shant\.m2\repository\org\springframework\spring-test\6.0.7\spring-test-6.0.7.jar;C:\Users\shant\.m2\repository\org\xmlunit\xmlunit-core\2.9.1\xmlunit-core-2.9.1.jar;C:\Users\shant\.m2\repository\org\twitter4j\twitter4j-stream\4.0.7\twitter4j-stream-4.0.7.jar;C:\Users\shant\.m2\repository\org\twitter4j\twitter4j-core\4.0.7\twitter4j-core-4.0.7.jar;C:\Users\shant\.m2\repository\org\apache\httpcomponents\httpclient\4.5.14\httpclient-4.5.14.jar;C:\Users\shant\.m2\repository\org\apache\httpcomponents\httpcore\4.4.16\httpcore-4.4.16.jar;C:\Users\shant\.m2\repository\commons-logging\commons-logging\1.2\commons-logging-1.2.jar;C:\Users\shant\.m2\repository\commons-codec\commons-codec\1.15\commons-codec-1.15.jar;C:\Users\shant\.m2\repository\org\json\json\20230227\json-20230227.jar;"/>
    <property name="java.vm.vendor" value="Oracle Corporation"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="user.variant" value=""/>
    <property name="java.vendor.url" value="https://java.oracle.com/"/>
    <property name="user.timezone" value="Asia/Calcutta"/>
    <property name="os.name" value="Windows 10"/>
    <property name="java.vm.specification.version" value="19"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="user.country" value="IN"/>
    <property name="sun.boot.library.path" value="C:\Program Files\Java\jdk-19\bin"/>
    <property name="sun.java.command" value="C:\Users\shant\AppData\Local\Temp\surefire11267479054559674817\surefirebooter13701901159717182876.jar C:\Users\shant\AppData\Local\Temp\surefire11267479054559674817 2023-04-20T00-43-25_717-jvmRun1 surefire15322936265221333362tmp surefire_011266100096813129558tmp"/>
    <property name="jdk.debug" value="release"/>
    <property name="surefire.test.class.path" value="D:\Workspaces\SpringToolsSuite\udemy\microservices-demo\microservices-demo\twitter-to-kafka-service\target\test-classes;D:\Workspaces\SpringToolsSuite\udemy\microservices-demo\microservices-demo\twitter-to-kafka-service\target\classes;D:\Workspaces\SpringToolsSuite\udemy\microservices-demo\microservices-demo\app-config-data\target\app-config-data-0.0.1-SNAPSHOT.jar;C:\Users\shant\.m2\repository\org\springframework\boot\spring-boot\3.0.5\spring-boot-3.0.5.jar;C:\Users\shant\.m2\repository\org\springframework\spring-context\6.0.7\spring-context-6.0.7.jar;C:\Users\shant\.m2\repository\org\springframework\spring-aop\6.0.7\spring-aop-6.0.7.jar;C:\Users\shant\.m2\repository\org\springframework\spring-beans\6.0.7\spring-beans-6.0.7.jar;C:\Users\shant\.m2\repository\org\springframework\spring-expression\6.0.7\spring-expression-6.0.7.jar;D:\Workspaces\SpringToolsSuite\udemy\microservices-demo\microservices-demo\kafka\kafka-admin\target\kafka-admin-0.0.1-SNAPSHOT.jar;D:\Workspaces\SpringToolsSuite\udemy\microservices-demo\microservices-demo\common-config\target\common-config-0.0.1-SNAPSHOT.jar;C:\Users\shant\.m2\repository\org\springframework\retry\spring-retry\2.0.1\spring-retry-2.0.1.jar;C:\Users\shant\.m2\repository\org\springframework\boot\spring-boot-starter-aop\3.0.5\spring-boot-starter-aop-3.0.5.jar;C:\Users\shant\.m2\repository\org\aspectj\aspectjweaver\1.9.19\aspectjweaver-1.9.19.jar;C:\Users\shant\.m2\repository\org\springframework\kafka\spring-kafka\3.0.5\spring-kafka-3.0.5.jar;C:\Users\shant\.m2\repository\org\springframework\spring-messaging\6.0.7\spring-messaging-6.0.7.jar;C:\Users\shant\.m2\repository\org\springframework\spring-tx\6.0.7\spring-tx-6.0.7.jar;C:\Users\shant\.m2\repository\org\apache\kafka\kafka-clients\3.3.2\kafka-clients-3.3.2.jar;C:\Users\shant\.m2\repository\com\github\luben\zstd-jni\1.5.2-1\zstd-jni-1.5.2-1.jar;C:\Users\shant\.m2\repository\org\lz4\lz4-java\1.8.0\lz4-java-1.8.0.jar;C:\Users\shant\.m2\repository\org\xerial\snappy\snappy-java\1.1.8.4\snappy-java-1.1.8.4.jar;C:\Users\shant\.m2\repository\io\micrometer\micrometer-observation\1.10.5\micrometer-observation-1.10.5.jar;C:\Users\shant\.m2\repository\io\micrometer\micrometer-commons\1.10.5\micrometer-commons-1.10.5.jar;C:\Users\shant\.m2\repository\com\google\code\findbugs\jsr305\3.0.2\jsr305-3.0.2.jar;C:\Users\shant\.m2\repository\org\springframework\boot\spring-boot-starter-webflux\3.0.5\spring-boot-starter-webflux-3.0.5.jar;C:\Users\shant\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.0.5\spring-boot-starter-json-3.0.5.jar;C:\Users\shant\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.14.2\jackson-databind-2.14.2.jar;C:\Users\shant\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.14.2\jackson-annotations-2.14.2.jar;C:\Users\shant\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.14.2\jackson-datatype-jdk8-2.14.2.jar;C:\Users\shant\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.14.2\jackson-datatype-jsr310-2.14.2.jar;C:\Users\shant\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.14.2\jackson-module-parameter-names-2.14.2.jar;C:\Users\shant\.m2\repository\org\springframework\boot\spring-boot-starter-reactor-netty\3.0.5\spring-boot-starter-reactor-netty-3.0.5.jar;C:\Users\shant\.m2\repository\io\projectreactor\netty\reactor-netty-http\1.1.5\reactor-netty-http-1.1.5.jar;C:\Users\shant\.m2\repository\io\netty\netty-codec-http\4.1.90.Final\netty-codec-http-4.1.90.Final.jar;C:\Users\shant\.m2\repository\io\netty\netty-common\4.1.90.Final\netty-common-4.1.90.Final.jar;C:\Users\shant\.m2\repository\io\netty\netty-buffer\4.1.90.Final\netty-buffer-4.1.90.Final.jar;C:\Users\shant\.m2\repository\io\netty\netty-transport\4.1.90.Final\netty-transport-4.1.90.Final.jar;C:\Users\shant\.m2\repository\io\netty\netty-codec\4.1.90.Final\netty-codec-4.1.90.Final.jar;C:\Users\shant\.m2\repository\io\netty\netty-handler\4.1.90.Final\netty-handler-4.1.90.Final.jar;C:\Users\shant\.m2\repository\io\netty\netty-codec-http2\4.1.90.Final\netty-codec-http2-4.1.90.Final.jar;C:\Users\shant\.m2\repository\io\netty\netty-resolver-dns\4.1.90.Final\netty-resolver-dns-4.1.90.Final.jar;C:\Users\shant\.m2\repository\io\netty\netty-resolver\4.1.90.Final\netty-resolver-4.1.90.Final.jar;C:\Users\shant\.m2\repository\io\netty\netty-codec-dns\4.1.90.Final\netty-codec-dns-4.1.90.Final.jar;C:\Users\shant\.m2\repository\io\netty\netty-resolver-dns-native-macos\4.1.90.Final\netty-resolver-dns-native-macos-4.1.90.Final-osx-x86_64.jar;C:\Users\shant\.m2\repository\io\netty\netty-resolver-dns-classes-macos\4.1.90.Final\netty-resolver-dns-classes-macos-4.1.90.Final.jar;C:\Users\shant\.m2\repository\io\netty\netty-transport-native-epoll\4.1.90.Final\netty-transport-native-epoll-4.1.90.Final-linux-x86_64.jar;C:\Users\shant\.m2\repository\io\netty\netty-transport-native-unix-common\4.1.90.Final\netty-transport-native-unix-common-4.1.90.Final.jar;C:\Users\shant\.m2\repository\io\netty\netty-transport-classes-epoll\4.1.90.Final\netty-transport-classes-epoll-4.1.90.Final.jar;C:\Users\shant\.m2\repository\io\projectreactor\netty\reactor-netty-core\1.1.5\reactor-netty-core-1.1.5.jar;C:\Users\shant\.m2\repository\io\netty\netty-handler-proxy\4.1.90.Final\netty-handler-proxy-4.1.90.Final.jar;C:\Users\shant\.m2\repository\io\netty\netty-codec-socks\4.1.90.Final\netty-codec-socks-4.1.90.Final.jar;C:\Users\shant\.m2\repository\org\springframework\spring-web\6.0.7\spring-web-6.0.7.jar;C:\Users\shant\.m2\repository\org\springframework\spring-webflux\6.0.7\spring-webflux-6.0.7.jar;C:\Users\shant\.m2\repository\io\projectreactor\reactor-core\3.5.4\reactor-core-3.5.4.jar;C:\Users\shant\.m2\repository\org\reactivestreams\reactive-streams\1.0.4\reactive-streams-1.0.4.jar;D:\Workspaces\SpringToolsSuite\udemy\microservices-demo\microservices-demo\kafka\kafka-producer\target\kafka-producer-0.0.1-SNAPSHOT.jar;D:\Workspaces\SpringToolsSuite\udemy\microservices-demo\microservices-demo\kafka\kafka-model\target\kafka-model-0.0.1-SNAPSHOT.jar;C:\Users\shant\.m2\repository\org\apache\avro\avro\1.11.0\avro-1.11.0.jar;C:\Users\shant\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.14.2\jackson-core-2.14.2.jar;C:\Users\shant\.m2\repository\io\confluent\kafka-avro-serializer\7.3.3\kafka-avro-serializer-7.3.3.jar;C:\Users\shant\.m2\repository\org\apache\commons\commons-compress\1.21\commons-compress-1.21.jar;C:\Users\shant\.m2\repository\io\confluent\kafka-schema-serializer\7.3.3\kafka-schema-serializer-7.3.3.jar;C:\Users\shant\.m2\repository\io\confluent\kafka-schema-registry-client\7.3.3\kafka-schema-registry-client-7.3.3.jar;C:\Users\shant\.m2\repository\io\swagger\core\v3\swagger-annotations\2.1.10\swagger-annotations-2.1.10.jar;C:\Users\shant\.m2\repository\com\google\guava\guava\30.1.1-jre\guava-30.1.1-jre.jar;C:\Users\shant\.m2\repository\com\google\guava\failureaccess\1.0.1\failureaccess-1.0.1.jar;C:\Users\shant\.m2\repository\com\google\guava\listenablefuture\9999.0-empty-to-avoid-conflict-with-guava\listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar;C:\Users\shant\.m2\repository\org\checkerframework\checker-qual\3.8.0\checker-qual-3.8.0.jar;C:\Users\shant\.m2\repository\com\google\errorprone\error_prone_annotations\2.5.1\error_prone_annotations-2.5.1.jar;C:\Users\shant\.m2\repository\com\google\j2objc\j2objc-annotations\1.3\j2objc-annotations-1.3.jar;C:\Users\shant\.m2\repository\io\confluent\logredactor\1.0.11\logredactor-1.0.11.jar;C:\Users\shant\.m2\repository\com\google\re2j\re2j\1.6\re2j-1.6.jar;C:\Users\shant\.m2\repository\io\confluent\logredactor-metrics\1.0.11\logredactor-metrics-1.0.11.jar;C:\Users\shant\.m2\repository\com\eclipsesource\minimal-json\minimal-json\0.9.5\minimal-json-0.9.5.jar;C:\Users\shant\.m2\repository\io\confluent\common-utils\7.3.3\common-utils-7.3.3.jar;C:\Users\shant\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\shant\.m2\repository\org\springframework\boot\spring-boot-starter\3.0.5\spring-boot-starter-3.0.5.jar;C:\Users\shant\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.0.5\spring-boot-autoconfigure-3.0.5.jar;C:\Users\shant\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.0.5\spring-boot-starter-logging-3.0.5.jar;C:\Users\shant\.m2\repository\ch\qos\logback\logback-classic\1.4.6\logback-classic-1.4.6.jar;C:\Users\shant\.m2\repository\ch\qos\logback\logback-core\1.4.6\logback-core-1.4.6.jar;C:\Users\shant\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.19.0\log4j-to-slf4j-2.19.0.jar;C:\Users\shant\.m2\repository\org\apache\logging\log4j\log4j-api\2.19.0\log4j-api-2.19.0.jar;C:\Users\shant\.m2\repository\org\slf4j\jul-to-slf4j\2.0.7\jul-to-slf4j-2.0.7.jar;C:\Users\shant\.m2\repository\org\springframework\spring-core\6.0.7\spring-core-6.0.7.jar;C:\Users\shant\.m2\repository\org\springframework\spring-jcl\6.0.7\spring-jcl-6.0.7.jar;C:\Users\shant\.m2\repository\org\yaml\snakeyaml\1.33\snakeyaml-1.33.jar;C:\Users\shant\.m2\repository\org\springframework\boot\spring-boot-starter-test\3.0.5\spring-boot-starter-test-3.0.5.jar;C:\Users\shant\.m2\repository\org\springframework\boot\spring-boot-test\3.0.5\spring-boot-test-3.0.5.jar;C:\Users\shant\.m2\repository\org\springframework\boot\spring-boot-test-autoconfigure\3.0.5\spring-boot-test-autoconfigure-3.0.5.jar;C:\Users\shant\.m2\repository\com\jayway\jsonpath\json-path\2.7.0\json-path-2.7.0.jar;C:\Users\shant\.m2\repository\net\minidev\json-smart\2.4.10\json-smart-2.4.10.jar;C:\Users\shant\.m2\repository\net\minidev\accessors-smart\2.4.9\accessors-smart-2.4.9.jar;C:\Users\shant\.m2\repository\org\ow2\asm\asm\9.3\asm-9.3.jar;C:\Users\shant\.m2\repository\org\slf4j\slf4j-api\2.0.7\slf4j-api-2.0.7.jar;C:\Users\shant\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.0\jakarta.xml.bind-api-4.0.0.jar;C:\Users\shant\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.1\jakarta.activation-api-2.1.1.jar;C:\Users\shant\.m2\repository\org\assertj\assertj-core\3.23.1\assertj-core-3.23.1.jar;C:\Users\shant\.m2\repository\net\bytebuddy\byte-buddy\1.12.23\byte-buddy-1.12.23.jar;C:\Users\shant\.m2\repository\org\hamcrest\hamcrest\2.2\hamcrest-2.2.jar;C:\Users\shant\.m2\repository\org\junit\jupiter\junit-jupiter\5.9.2\junit-jupiter-5.9.2.jar;C:\Users\shant\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.9.2\junit-jupiter-api-5.9.2.jar;C:\Users\shant\.m2\repository\org\opentest4j\opentest4j\1.2.0\opentest4j-1.2.0.jar;C:\Users\shant\.m2\repository\org\junit\platform\junit-platform-commons\1.9.2\junit-platform-commons-1.9.2.jar;C:\Users\shant\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;C:\Users\shant\.m2\repository\org\junit\jupiter\junit-jupiter-params\5.9.2\junit-jupiter-params-5.9.2.jar;C:\Users\shant\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.9.2\junit-jupiter-engine-5.9.2.jar;C:\Users\shant\.m2\repository\org\junit\platform\junit-platform-engine\1.9.2\junit-platform-engine-1.9.2.jar;C:\Users\shant\.m2\repository\org\mockito\mockito-core\4.8.1\mockito-core-4.8.1.jar;C:\Users\shant\.m2\repository\net\bytebuddy\byte-buddy-agent\1.12.23\byte-buddy-agent-1.12.23.jar;C:\Users\shant\.m2\repository\org\objenesis\objenesis\3.2\objenesis-3.2.jar;C:\Users\shant\.m2\repository\org\mockito\mockito-junit-jupiter\4.8.1\mockito-junit-jupiter-4.8.1.jar;C:\Users\shant\.m2\repository\org\skyscreamer\jsonassert\1.5.1\jsonassert-1.5.1.jar;C:\Users\shant\.m2\repository\com\vaadin\external\google\android-json\0.0.20131108.vaadin1\android-json-0.0.20131108.vaadin1.jar;C:\Users\shant\.m2\repository\org\springframework\spring-test\6.0.7\spring-test-6.0.7.jar;C:\Users\shant\.m2\repository\org\xmlunit\xmlunit-core\2.9.1\xmlunit-core-2.9.1.jar;C:\Users\shant\.m2\repository\org\twitter4j\twitter4j-stream\4.0.7\twitter4j-stream-4.0.7.jar;C:\Users\shant\.m2\repository\org\twitter4j\twitter4j-core\4.0.7\twitter4j-core-4.0.7.jar;C:\Users\shant\.m2\repository\org\apache\httpcomponents\httpclient\4.5.14\httpclient-4.5.14.jar;C:\Users\shant\.m2\repository\org\apache\httpcomponents\httpcore\4.4.16\httpcore-4.4.16.jar;C:\Users\shant\.m2\repository\commons-logging\commons-logging\1.2\commons-logging-1.2.jar;C:\Users\shant\.m2\repository\commons-codec\commons-codec\1.15\commons-codec-1.15.jar;C:\Users\shant\.m2\repository\org\json\json\20230227\json-20230227.jar;"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="user.home" value="C:\Users\shant"/>
    <property name="user.language" value="en"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="java.version.date" value="2022-10-18"/>
    <property name="java.home" value="C:\Program Files\Java\jdk-19"/>
    <property name="file.separator" value="\"/>
    <property name="basedir" value="D:\Workspaces\SpringToolsSuite\udemy\microservices-demo\microservices-demo\twitter-to-kafka-service"/>
    <property name="java.vm.compressedOopsMode" value="Zero based"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="surefire.real.class.path" value="C:\Users\shant\AppData\Local\Temp\surefire11267479054559674817\surefirebooter13701901159717182876.jar"/>
    <property name="user.script" value=""/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="java.runtime.version" value="19.0.1+10-21"/>
    <property name="user.name" value="shant"/>
    <property name="stdout.encoding" value="Cp1252"/>
    <property name="path.separator" value=";"/>
    <property name="os.version" value="10.0"/>
    <property name="java.runtime.name" value="Java(TM) SE Runtime Environment"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="java.vm.name" value="Java HotSpot(TM) 64-Bit Server VM"/>
    <property name="localRepository" value="C:\Users\shant\.m2\repository"/>
    <property name="java.vendor.url.bug" value="https://bugreport.java.com/bugreport/"/>
    <property name="java.io.tmpdir" value="C:\Users\shant\AppData\Local\Temp\"/>
    <property name="idea.version" value="2022.3.1"/>
    <property name="java.version" value="19.0.1"/>
    <property name="user.dir" value="D:\Workspaces\SpringToolsSuite\udemy\microservices-demo\microservices-demo\twitter-to-kafka-service"/>
    <property name="os.arch" value="amd64"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="sun.os.patch.level" value=""/>
    <property name="native.encoding" value="Cp1252"/>
    <property name="java.library.path" value="C:\Program Files\Java\jdk-19\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Python310\Scripts\;C:\Python310\;C:\Program Files\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Program Files\nodejs\;C:\ProgramData\chocolatey\bin;;C:\Program Files\Docker\Docker\resources\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\shant\AppData\Local\Microsoft\WindowsApps;C:\Users\shant\AppData\Roaming\npm;D:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2022.3.1\bin;;D:\Program Files\mongosh\;D:\Program Files\Microsoft VS Code\bin;."/>
    <property name="java.vm.info" value="mixed mode, sharing"/>
    <property name="stderr.encoding" value="Cp1252"/>
    <property name="java.vendor" value="Oracle Corporation"/>
    <property name="java.vm.version" value="19.0.1+10-21"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="java.class.version" value="63.0"/>
  </properties>
  <testcase name="contextLoad" classname="com.microservices.demo.config.twitter.to.kafka.service.TwitterToKafkaServiceApplicationTest" time="0.004">
    <error message="Failed to load ApplicationContext for [ReactiveWebMergedContextConfiguration@6342ff7f testClass = com.microservices.demo.config.twitter.to.kafka.service.TwitterToKafkaServiceApplicationTest, locations = [], classes = [com.microservices.demo.config.twitter.to.kafka.service.TwitterToKafkaServiceApplication], contextInitializerClasses = [], activeProfiles = [], propertySourceLocations = [], propertySourceProperties = [&quot;org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true&quot;], contextCustomizers = [org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@291a7e3c, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@5505ae1a, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@3adcc812, org.springframework.boot.test.web.reactive.server.WebTestClientContextCustomizer@4b41dd5c, org.springframework.boot.test.autoconfigure.actuate.observability.ObservabilityContextCustomizerFactory$DisableObservabilityContextCustomizer@9da1, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@34c01041, org.springframework.boot.test.context.SpringBootTestAnnotation@6a13922b], contextLoader = org.springframework.boot.test.context.SpringBootContextLoader, parent = null]" type="java.lang.IllegalStateException">java.lang.IllegalStateException: Failed to load ApplicationContext for [ReactiveWebMergedContextConfiguration@6342ff7f testClass = com.microservices.demo.config.twitter.to.kafka.service.TwitterToKafkaServiceApplicationTest, locations = [], classes = [com.microservices.demo.config.twitter.to.kafka.service.TwitterToKafkaServiceApplication], contextInitializerClasses = [], activeProfiles = [], propertySourceLocations = [], propertySourceProperties = ["org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true"], contextCustomizers = [org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@291a7e3c, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@5505ae1a, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@3adcc812, org.springframework.boot.test.web.reactive.server.WebTestClientContextCustomizer@4b41dd5c, org.springframework.boot.test.autoconfigure.actuate.observability.ObservabilityContextCustomizerFactory$DisableObservabilityContextCustomizer@9da1, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@34c01041, org.springframework.boot.test.context.SpringBootTestAnnotation@6a13922b], contextLoader = org.springframework.boot.test.context.SpringBootContextLoader, parent = null]
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'kafkaStreamInitializer' defined in file [D:\Workspaces\SpringToolsSuite\udemy\microservices-demo\microservices-demo\twitter-to-kafka-service\target\classes\com\microservices\demo\config\twitter\to\kafka\service\init\impl\KafkaStreamInitializer.class]: Unsatisfied dependency expressed through constructor parameter 1: Error creating bean with name 'kafkaAdminClient' defined in URL [jar:file:/D:/Workspaces/SpringToolsSuite/udemy/microservices-demo/microservices-demo/kafka/kafka-admin/target/kafka-admin-0.0.1-SNAPSHOT.jar!/com/microservices/demo/kafka/admin/client/KafkaAdminClient.class]: Unsatisfied dependency expressed through constructor parameter 2: No qualifying bean of type 'org.apache.kafka.clients.admin.AdminClient' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {}
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'kafkaAdminClient' defined in URL [jar:file:/D:/Workspaces/SpringToolsSuite/udemy/microservices-demo/microservices-demo/kafka/kafka-admin/target/kafka-admin-0.0.1-SNAPSHOT.jar!/com/microservices/demo/kafka/admin/client/KafkaAdminClient.class]: Unsatisfied dependency expressed through constructor parameter 2: No qualifying bean of type 'org.apache.kafka.clients.admin.AdminClient' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {}
Caused by: org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'org.apache.kafka.clients.admin.AdminClient' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {}
</error>
    <system-out><![CDATA[00:43:32,659 |-INFO in ch.qos.logback.classic.LoggerContext[default] - This is logback-classic version 1.4.6
00:43:32,685 |-INFO in ch.qos.logback.classic.LoggerContext[default] - Could NOT find resource [logback-test.xml]
00:43:32,689 |-INFO in ch.qos.logback.classic.LoggerContext[default] - Found resource [logback.xml] at [file:/D:/Workspaces/SpringToolsSuite/udemy/microservices-demo/microservices-demo/twitter-to-kafka-service/target/classes/logback.xml]
00:43:32,790 |-INFO in ch.qos.logback.core.model.processor.AppenderModelHandler - Processing appender named [STDOUT]
00:43:32,790 |-INFO in ch.qos.logback.core.model.processor.AppenderModelHandler - About to instantiate appender of type [ch.qos.logback.core.ConsoleAppender]
00:43:32,828 |-WARN in ch.qos.logback.core.ConsoleAppender[STDOUT] - This appender no longer admits a layout as a sub-component, set an encoder instead.
00:43:32,828 |-WARN in ch.qos.logback.core.ConsoleAppender[STDOUT] - To ensure compatibility, wrapping your layout in LayoutWrappingEncoder.
00:43:32,828 |-WARN in ch.qos.logback.core.ConsoleAppender[STDOUT] - See also http://logback.qos.ch/codes.html#layoutInsteadOfEncoder for details
00:43:32,828 |-INFO in ch.qos.logback.core.model.processor.AppenderModelHandler - Processing appender named [FILE]
00:43:32,828 |-INFO in ch.qos.logback.core.model.processor.AppenderModelHandler - About to instantiate appender of type [ch.qos.logback.core.rolling.RollingFileAppender]
00:43:32,831 |-INFO in ch.qos.logback.core.model.processor.ImplicitModelHandler - Assuming default type [ch.qos.logback.classic.encoder.PatternLayoutEncoder] for [encoder] property
00:43:32,836 |-WARN in ch.qos.logback.core.model.processor.ImplicitModelHandler - Ignoring unknown property [timeBasedFileNamingAndTriggerPolicy] in [ch.qos.logback.core.rolling.TimeBasedRollingPolicy]
00:43:32,839 |-INFO in c.q.l.core.rolling.TimeBasedRollingPolicy@1604247316 - No compression will be used
00:43:32,840 |-INFO in c.q.l.core.rolling.TimeBasedRollingPolicy@1604247316 - Will use the pattern ./twitter-to-kafka-service/logs/archived/twitter-to-kafka-service-log.%d{yyyy-MM-dd}.log for the active file
00:43:32,843 |-INFO in c.q.l.core.rolling.DefaultTimeBasedFileNamingAndTriggeringPolicy - The date pattern is 'yyyy-MM-dd' from file name pattern './twitter-to-kafka-service/logs/archived/twitter-to-kafka-service-log.%d{yyyy-MM-dd}.log'.
00:43:32,843 |-INFO in c.q.l.core.rolling.DefaultTimeBasedFileNamingAndTriggeringPolicy - Roll-over at midnight.
00:43:32,844 |-INFO in c.q.l.core.rolling.DefaultTimeBasedFileNamingAndTriggeringPolicy - Setting initial period to 2023-04-19T19:06:42.588Z
00:43:32,849 |-INFO in ch.qos.logback.core.rolling.RollingFileAppender[FILE] - Active log file name: ./twitter-to-kafka-service/logs/twitter-to-kafka-service.log
00:43:32,849 |-INFO in ch.qos.logback.core.rolling.RollingFileAppender[FILE] - File property is set to [./twitter-to-kafka-service/logs/twitter-to-kafka-service.log]
00:43:32,851 |-INFO in ch.qos.logback.classic.model.processor.LoggerModelHandler - Setting level of logger [com.microservices.demo] to INFO
00:43:32,854 |-INFO in ch.qos.logback.classic.model.processor.LoggerModelHandler - Setting additivity of logger [com.microservices.demo] to false
00:43:32,854 |-INFO in ch.qos.logback.core.model.processor.AppenderRefModelHandler - Attaching appender named [FILE] to Logger[com.microservices.demo]
00:43:32,854 |-INFO in ch.qos.logback.core.model.processor.AppenderRefModelHandler - Attaching appender named [STDOUT] to Logger[com.microservices.demo]
00:43:32,855 |-INFO in ch.qos.logback.classic.model.processor.RootLoggerModelHandler - Setting level of ROOT logger to INFO
00:43:32,855 |-INFO in ch.qos.logback.core.model.processor.AppenderRefModelHandler - Attaching appender named [FILE] to Logger[ROOT]
00:43:32,855 |-INFO in ch.qos.logback.core.model.processor.AppenderRefModelHandler - Attaching appender named [STDOUT] to Logger[ROOT]
00:43:32,855 |-INFO in ch.qos.logback.core.model.processor.DefaultProcessor@68746f22 - End of configuration.
00:43:32,855 |-INFO in ch.qos.logback.classic.joran.JoranConfigurator@2f01783a - Registering current configuration as safe fallback point

2023:04:20 00:43:32 INFO  [main] o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.microservices.demo.config.twitter.to.kafka.service.TwitterToKafkaServiceApplicationTest]: TwitterToKafkaServiceApplicationTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2023:04:20 00:43:33 INFO  [main] o.s.b.t.c.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.microservices.demo.config.twitter.to.kafka.service.TwitterToKafkaServiceApplication for test class com.microservices.demo.config.twitter.to.kafka.service.TwitterToKafkaServiceApplicationTest
00:43:33,463 |-INFO in ch.qos.logback.core.model.processor.AppenderModelHandler - Processing appender named [STDOUT]
00:43:33,463 |-INFO in ch.qos.logback.core.model.processor.AppenderModelHandler - About to instantiate appender of type [ch.qos.logback.core.ConsoleAppender]
00:43:33,466 |-WARN in ch.qos.logback.core.ConsoleAppender[STDOUT] - This appender no longer admits a layout as a sub-component, set an encoder instead.
00:43:33,466 |-WARN in ch.qos.logback.core.ConsoleAppender[STDOUT] - To ensure compatibility, wrapping your layout in LayoutWrappingEncoder.
00:43:33,466 |-WARN in ch.qos.logback.core.ConsoleAppender[STDOUT] - See also http://logback.qos.ch/codes.html#layoutInsteadOfEncoder for details
00:43:33,466 |-INFO in ch.qos.logback.core.model.processor.AppenderModelHandler - Processing appender named [FILE]
00:43:33,466 |-INFO in ch.qos.logback.core.model.processor.AppenderModelHandler - About to instantiate appender of type [ch.qos.logback.core.rolling.RollingFileAppender]
00:43:33,466 |-INFO in ch.qos.logback.core.model.processor.ImplicitModelHandler - Assuming default type [ch.qos.logback.classic.encoder.PatternLayoutEncoder] for [encoder] property
00:43:33,468 |-WARN in ch.qos.logback.core.model.processor.ImplicitModelHandler - Ignoring unknown property [timeBasedFileNamingAndTriggerPolicy] in [ch.qos.logback.core.rolling.TimeBasedRollingPolicy]
00:43:33,468 |-INFO in c.q.l.core.rolling.TimeBasedRollingPolicy@352378889 - No compression will be used
00:43:33,469 |-INFO in c.q.l.core.rolling.TimeBasedRollingPolicy@352378889 - Will use the pattern ./twitter-to-kafka-service/logs/archived/twitter-to-kafka-service-log.%d{yyyy-MM-dd}.log for the active file
00:43:33,469 |-INFO in c.q.l.core.rolling.DefaultTimeBasedFileNamingAndTriggeringPolicy - The date pattern is 'yyyy-MM-dd' from file name pattern './twitter-to-kafka-service/logs/archived/twitter-to-kafka-service-log.%d{yyyy-MM-dd}.log'.
00:43:33,469 |-INFO in c.q.l.core.rolling.DefaultTimeBasedFileNamingAndTriggeringPolicy - Roll-over at midnight.
00:43:33,470 |-INFO in c.q.l.core.rolling.DefaultTimeBasedFileNamingAndTriggeringPolicy - Setting initial period to 2023-04-19T19:13:33.051Z
00:43:33,471 |-INFO in ch.qos.logback.core.rolling.RollingFileAppender[FILE] - Active log file name: ./twitter-to-kafka-service/logs/twitter-to-kafka-service.log
00:43:33,471 |-INFO in ch.qos.logback.core.rolling.RollingFileAppender[FILE] - File property is set to [./twitter-to-kafka-service/logs/twitter-to-kafka-service.log]
00:43:33,471 |-INFO in ch.qos.logback.classic.model.processor.LoggerModelHandler - Setting level of logger [com.microservices.demo] to INFO
00:43:33,471 |-INFO in ch.qos.logback.classic.jul.LevelChangePropagator@1fd386c3 - Propagating INFO level on Logger[com.microservices.demo] onto the JUL framework
00:43:33,472 |-INFO in ch.qos.logback.classic.model.processor.LoggerModelHandler - Setting additivity of logger [com.microservices.demo] to false
00:43:33,472 |-INFO in ch.qos.logback.core.model.processor.AppenderRefModelHandler - Attaching appender named [FILE] to Logger[com.microservices.demo]
00:43:33,472 |-INFO in ch.qos.logback.core.model.processor.AppenderRefModelHandler - Attaching appender named [STDOUT] to Logger[com.microservices.demo]
00:43:33,472 |-INFO in ch.qos.logback.classic.model.processor.RootLoggerModelHandler - Setting level of ROOT logger to INFO
00:43:33,472 |-INFO in ch.qos.logback.classic.jul.LevelChangePropagator@1fd386c3 - Propagating INFO level on Logger[ROOT] onto the JUL framework
00:43:33,472 |-INFO in ch.qos.logback.core.model.processor.AppenderRefModelHandler - Attaching appender named [FILE] to Logger[ROOT]
00:43:33,472 |-INFO in ch.qos.logback.core.model.processor.AppenderRefModelHandler - Attaching appender named [STDOUT] to Logger[ROOT]
00:43:33,473 |-INFO in ch.qos.logback.core.model.processor.DefaultProcessor@edf4f36 - End of configuration.
00:43:33,473 |-INFO in org.springframework.boot.logging.logback.SpringBootJoranConfigurator@29d334c - Registering current configuration as safe fallback point


  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::                (v3.0.5)

2023:04:20 00:43:33 WARN  [main] o.s.b.t.j.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer - 

Found multiple occurrences of org.json.JSONObject on the class path:

	jar:file:/C:/Users/shant/.m2/repository/com/vaadin/external/google/android-json/0.0.20131108.vaadin1/android-json-0.0.20131108.vaadin1.jar!/org/json/JSONObject.class
	jar:file:/C:/Users/shant/.m2/repository/org/json/json/20230227/json-20230227.jar!/org/json/JSONObject.class

You may wish to exclude one of them to ensure predictable runtime behavior

2023:04:20 00:43:33 INFO  [main] c.m.d.c.t.t.k.s.TwitterToKafkaServiceApplicationTest - Starting TwitterToKafkaServiceApplicationTest using Java 19.0.1 with PID 5868 (started by shant in D:\Workspaces\SpringToolsSuite\udemy\microservices-demo\microservices-demo\twitter-to-kafka-service)
2023:04:20 00:43:33 INFO  [main] c.m.d.c.t.t.k.s.TwitterToKafkaServiceApplicationTest - No active profile set, falling back to 1 default profile: "default"
2023:04:20 00:43:34 WARN  [main] o.s.b.w.r.c.GenericReactiveWebApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'kafkaStreamInitializer' defined in file [D:\Workspaces\SpringToolsSuite\udemy\microservices-demo\microservices-demo\twitter-to-kafka-service\target\classes\com\microservices\demo\config\twitter\to\kafka\service\init\impl\KafkaStreamInitializer.class]: Unsatisfied dependency expressed through constructor parameter 1: Error creating bean with name 'kafkaAdminClient' defined in URL [jar:file:/D:/Workspaces/SpringToolsSuite/udemy/microservices-demo/microservices-demo/kafka/kafka-admin/target/kafka-admin-0.0.1-SNAPSHOT.jar!/com/microservices/demo/kafka/admin/client/KafkaAdminClient.class]: Unsatisfied dependency expressed through constructor parameter 2: No qualifying bean of type 'org.apache.kafka.clients.admin.AdminClient' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {}
2023:04:20 00:43:34 INFO  [main] o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2023:04:20 00:43:34 ERROR [main] o.s.b.d.LoggingFailureAnalysisReporter - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Parameter 2 of constructor in com.microservices.demo.kafka.admin.client.KafkaAdminClient required a bean of type 'org.apache.kafka.clients.admin.AdminClient' that could not be found.


Action:

Consider defining a bean of type 'org.apache.kafka.clients.admin.AdminClient' in your configuration.

2023:04:20 00:43:34 ERROR [main] o.s.test.context.TestContextManager - Caught exception while allowing TestExecutionListener [org.springframework.test.context.support.DependencyInjectionTestExecutionListener] to prepare test instance [com.microservices.demo.config.twitter.to.kafka.service.TwitterToKafkaServiceApplicationTest@403c3a01]
java.lang.IllegalStateException: Failed to load ApplicationContext for [ReactiveWebMergedContextConfiguration@6342ff7f testClass = com.microservices.demo.config.twitter.to.kafka.service.TwitterToKafkaServiceApplicationTest, locations = [], classes = [com.microservices.demo.config.twitter.to.kafka.service.TwitterToKafkaServiceApplication], contextInitializerClasses = [], activeProfiles = [], propertySourceLocations = [], propertySourceProperties = ["org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true"], contextCustomizers = [org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@291a7e3c, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@5505ae1a, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@3adcc812, org.springframework.boot.test.web.reactive.server.WebTestClientContextCustomizer@4b41dd5c, org.springframework.boot.test.autoconfigure.actuate.observability.ObservabilityContextCustomizerFactory$DisableObservabilityContextCustomizer@9da1, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@34c01041, org.springframework.boot.test.context.SpringBootTestAnnotation@6a13922b], contextLoader = org.springframework.boot.test.context.SpringBootContextLoader, parent = null]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:142)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:127)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:141)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:97)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:241)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:138)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:382)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:377)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:376)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:289)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:288)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:278)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:277)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:105)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:104)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:68)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'kafkaStreamInitializer' defined in file [D:\Workspaces\SpringToolsSuite\udemy\microservices-demo\microservices-demo\twitter-to-kafka-service\target\classes\com\microservices\demo\config\twitter\to\kafka\service\init\impl\KafkaStreamInitializer.class]: Unsatisfied dependency expressed through constructor parameter 1: Error creating bean with name 'kafkaAdminClient' defined in URL [jar:file:/D:/Workspaces/SpringToolsSuite/udemy/microservices-demo/microservices-demo/kafka/kafka-admin/target/kafka-admin-0.0.1-SNAPSHOT.jar!/com/microservices/demo/kafka/admin/client/KafkaAdminClient.class]: Unsatisfied dependency expressed through constructor parameter 2: No qualifying bean of type 'org.apache.kafka.clients.admin.AdminClient' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {}
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:798)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:245)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1189)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:560)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:973)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:917)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:584)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:434)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:310)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1388)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:545)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:184)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:118)
	... 67 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'kafkaAdminClient' defined in URL [jar:file:/D:/Workspaces/SpringToolsSuite/udemy/microservices-demo/microservices-demo/kafka/kafka-admin/target/kafka-admin-0.0.1-SNAPSHOT.jar!/com/microservices/demo/kafka/admin/client/KafkaAdminClient.class]: Unsatisfied dependency expressed through constructor parameter 2: No qualifying bean of type 'org.apache.kafka.clients.admin.AdminClient' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {}
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:798)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:245)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1189)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:560)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:885)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:789)
	... 91 common frames omitted
Caused by: org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'org.apache.kafka.clients.admin.AdminClient' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {}
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.raiseNoMatchingBeanFound(DefaultListableBeanFactory.java:1824)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1383)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:885)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:789)
	... 105 common frames omitted
]]></system-out>
    <system-err><![CDATA[


============================
CONDITIONS EVALUATION REPORT
============================


Positive matches:
-----------------

    None


Negative matches:
-----------------

    None


Exclusions:
-----------

    None


Unconditional classes:
----------------------

    None



]]></system-err>
  </testcase>
</testsuite>